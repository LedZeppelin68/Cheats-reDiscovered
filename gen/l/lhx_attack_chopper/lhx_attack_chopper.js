function generate_password() {

    let alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ4679-?";

    let code = new Array(7);

    code[0] = 3;
    code[1] = 4;
    code[2] = 5;
    code[3] = 6;
    code[4] = 7;
    code[5] = 8;
    code[6] = 9;

    let temp = 0;

    for (let i = 0; i < 7; i++) {
        temp <<= 5;
        temp |= code[i];
    }

    let table = [
        0x00, 0x40, 0x10, 0x50, 0x20, 0x60, 0x30, 0x70, 0x01, 0x41, 0x11, 0x51,
        0x21, 0x61, 0x31, 0x71, 0x80, 0xC0, 0x90, 0xD0, 0xA0, 0xE0, 0xB0, 0xF0,
        0x81, 0xC1, 0x91, 0xD1, 0xA1, 0xE1, 0xB1, 0xF1, 0x04, 0x44, 0x14, 0x54,
        0x24, 0x64, 0x34, 0x74, 0x05, 0x45, 0x15, 0x55, 0x25, 0x65, 0x35, 0x75,
        0x84, 0xC4, 0x94, 0xD4, 0xA4, 0xE4, 0xB4, 0xF4, 0x85, 0xC5, 0x95, 0xD5,
        0xA5, 0xE5, 0xB5, 0xF5, 0x08, 0x48, 0x18, 0x58, 0x28, 0x68, 0x38, 0x78,
        0x09, 0x49, 0x19, 0x59, 0x29, 0x69, 0x39, 0x79, 0x88, 0xC8, 0x98, 0xD8,
        0xA8, 0xE8, 0xB8, 0xF8, 0x89, 0xC9, 0x99, 0xD9, 0xA9, 0xE9, 0xB9, 0xF9,
        0x0C, 0x4C, 0x1C, 0x5C, 0x2C, 0x6C, 0x3C, 0x7C, 0x0D, 0x4D, 0x1D, 0x5D,
        0x2D, 0x6D, 0x3D, 0x7D, 0x8C, 0xCC, 0x9C, 0xDC, 0xAC, 0xEC, 0xBC, 0xFC,
        0x8D, 0xCD, 0x9D, 0xDD, 0xAD, 0xED, 0xBD, 0xFD, 0x02, 0x42, 0x12, 0x52,
        0x22, 0x62, 0x32, 0x72, 0x03, 0x43, 0x13, 0x53, 0x23, 0x63, 0x33, 0x73,
        0x82, 0xC2, 0x92, 0xD2, 0xA2, 0xE2, 0xB2, 0xF2, 0x83, 0xC3, 0x93, 0xD3,
        0xA3, 0xE3, 0xB3, 0xF3, 0x06, 0x46, 0x16, 0x56, 0x26, 0x66, 0x36, 0x76,
        0x07, 0x47, 0x17, 0x57, 0x27, 0x67, 0x37, 0x77, 0x86, 0xC6, 0x96, 0xD6,
        0xA6, 0xE6, 0xB6, 0xF6, 0x87, 0xC7, 0x97, 0xD7, 0xA7, 0xE7, 0xB7, 0xF7,
        0x0A, 0x4A, 0x1A, 0x5A, 0x2A, 0x6A, 0x3A, 0x7A, 0x0B, 0x4B, 0x1B, 0x5B,
        0x2B, 0x6B, 0x3B, 0x7B, 0x8A, 0xCA, 0x9A, 0xDA, 0xAA, 0xEA, 0xBA, 0xFA,
        0x8B, 0xCB, 0x9B, 0xDB, 0xAB, 0xEB, 0xBB, 0xFB, 0x0E, 0x4E, 0x1E, 0x5E,
        0x2E, 0x6E, 0x3E, 0x7E, 0x0F, 0x4F, 0x1F, 0x5F, 0x2F, 0x6F, 0x3F, 0x7F,
        0x8E, 0xCE, 0x9E, 0xDE, 0xAE, 0xEE, 0xBE, 0xFE, 0x8F, 0xCF, 0x9F, 0xDF,
        0xAF, 0xEF, 0xBF, 0xFF
    ];

    let code2 = new Array(4);


    for (let i = 3; i >= 0; i--) {
        code2[i] = table[temp & 0xff];
        temp >>= 8;
    }

    let checksum = code2[3] & 0x3f;

    code2[0] = 2;//unk value 0 или 2
    code2[0] |= 4 << 2;// difficulty 0 - Very easy, 1 - Easy, 2 - Medium, 3 - Hard, 4 - Very Hard
    code2[0] |= 0b001 << 5; // unk value

    code2[2] = 0;
    code2[2] = 0b11;
    code2[2] |= 5 << 2;//макс 0x22 5- CHESS, 10 - PLAIN ARIA

    code2[3] >>= 6;

    let temp2 = 0;
    for (let i = 0; i < 4; i++) {
        temp2 ^= code2[i];
    }

    temp2 &= 0x3f;

    code2[3] = (code2[3] << 6) | temp2;

    temp = 0;

    let bits = 24;
    for (let i = 0; i < 4; i++) {
        code2[i] = table.indexOf(code2[i]);
        temp |= code2[i] << (bits);
        bits -= 8;
    }

    let password = "";

    for (let i = 6; i >= 0; i--) {
        password += alphabet[(temp >> (i * 5)) & 0x1f];
        //temp >>= 5;
    }
}